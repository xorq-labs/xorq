name: ci-test-s3

on:
  workflow_dispatch:
  pull_request_target:
    types:
      - labeled

permissions:
  contents: read


jobs:
  linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.label.name == 'ci-test-s3'
    strategy:
      matrix:
        target: ["x86_64"]
        python-version: ["3.11"]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        if: github.event.label.name != 'ci-test-s3'

      - name: checkout
        if: github.event.label.name == 'ci-test-s3'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: extractions/setup-just@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: download test data
        run: just download-data

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --extra examples --group dev --group test
        working-directory: ${{ github.workspace }}

      - name: start services
        run: docker compose up --build --wait

      - name: pytest
        run: uv run --no-sync pytest --import-mode=importlib -m s3 python/xorq/ -v --cov --cov-report=xml
        working-directory: ${{ github.workspace }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: ibis_testing

      - name: Upload coverage reports to Codecov
        if: success()
        continue-on-error: true
        uses: codecov/codecov-action@v5.4.3
        with:
          flags: s3
          token: ${{ secrets.CODECOV_TOKEN }}

