name: ci-test-examples

on:
  push:
    # Skip the backend suite if all changes are docs
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.qmd"
      - "*.md"
      - "codecov.yml"
      - ".envrc"
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read


jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86_64"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: download test data
        run: just download-data

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync --locked --extra examples --extra pyiceberg --group dev
        working-directory: ${{ github.workspace }}

      - name: start services
        run: docker compose up --build --wait

      - name: pytest
        run: uv run --no-sync pytest --import-mode=importlib python/xorq/tests/test_examples.py -v --cov --cov-report=xml
        working-directory: ${{ github.workspace }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: ibis_testing
          WEATHER_FEATURES_PORT: 8819
          WEATHER_API_URL: https://api.openweathermap.org/data/2.5/weather
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
