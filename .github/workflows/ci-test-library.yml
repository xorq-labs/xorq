name: ci-test-library

on:
  push:
    # Skip the backend suite if all changes are docs
    paths-ignore:
      - "docs/**"
      - "**/*.md"
      - "**/*.qmd"
      - "*.md"
      - "codecov.yml"
      - ".envrc"
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read


jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86_64"]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      # check how to use virtual environment https://stackoverflow.com/q/74668349/4001592
      - name: create build virtual environment
        run: uv venv .venv

      - name: build package
        run: uv build

      - name: test wheel
        run: | 
          cd python
          uv run --isolated --no-project -p ${{ matrix.python-version }} --with ../dist/*.whl -- python -c "import xorq; print(f'Successfully imported {xorq.__name__} version {xorq.__version__}')"
          uv run --isolated --no-project -p ${{ matrix.python-version }} --with ../dist/*.whl --with pytest --with pytest-cov -- pytest --import-mode=importlib --cov --cov-report=xml -m "library or let"

      - name: test source distribution
        run: | 
          cd python
          uv run --isolated --no-project -p ${{ matrix.python-version }} --with ../dist/*.tar.gz -- python -c "import xorq; print(f'Successfully imported {xorq.__name__} version {xorq.__version__}')"
          uv run --isolated --no-project -p ${{ matrix.python-version }} --with ../dist/*.tar.gz --with pytest --with pytest-cov -- pytest --import-mode=importlib --cov --cov-report=xml -m "library or let"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}